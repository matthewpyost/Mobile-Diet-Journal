@model DietJournal.Web.Models.ExerciseEntryModel
@{
    ViewBag.Title = "Exercise Entry";
    Layout = "~/Views/Shared/_Journal.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">

    var previousPage = '@Url.Action("Index", "Exercise", new { date = Model.ConsumedDate })';

    function onSuccess(data) {
        if (data.IsValid) {
            $.mobile.changePage(previousPage,
            {
                transition: "slide",
                reverse: true,
                reloadPage: true
            });
        }
        else {

        }
    }

    $(document).ready(function () {
        $("#exerciseEntryForm").submit(function () {
            if ($(this).valid()) {
                $.ajax({
                    url: $(this).attr("action"),
                    type: "post",
                    data: $(this).serialize(),
                    success: onSuccess
                });
            }
            return false;
        });
    });

    function exerciseTypeSelected(id) {
        $("#exerciseTypeValues").html("");
        if (id != "") {
            $.mobile.showPageLoadingMsg();
            $.ajax({
                url: "/Exercise/EntryType",
                type: "post",
                data: "exerciseTypeId=" + id + "&exerciseEntryId=0",
                success: function (data) {
                    $.mobile.hidePageLoadingMsg();
                    $("#exerciseTypeValues").html(data).trigger('create');
                    $("form").removeData("validator");
                    $("form").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse("form");

                }
            });
        }
    }

    function deleteEntry(id) {
        if (confirm('Are you sure you wish to delete this entry?')) {
            $.mobile.showPageLoadingMsg();
            $.ajax({
                url: "/Exercise/Delete",
                type: "post",
                data: "id=" + id,
                success: function () {
                    $.mobile.changePage(previousPage,
                    {
                        transition: "slide",
                        reverse: true,
                        reloadPage: true
                    });
                }
            });
        }

        return false;
    }
</script>

@section LeftNav
{
    @if(Model.Id == 0 && !Model.Favorite)
    {
        <a href='@Url.Action("SelectFavorite", "Exercise", new { date = Model.ConsumedDate })' data-icon="star" data-transition="pop" data-rel="dialog">Favorite</a>
    }
}

@using (Html.BeginForm("Entry", "Exercise", FormMethod.Post, new { id = "exerciseEntryForm" }))
{
    @Html.ValidationSummary(true, "Food entry submit/update was unsuccessful. Please correct the errors and try again.")

    <ul data-role="listview" data-theme="d" data-inset="true">
        <li data-role="list-divider">General Details</li>
    @if (Model.AvailableExerciseTypes != null && Model.AvailableExerciseTypes.Count() > 0)
    {
        <li>
            @Html.DropDownListFor(m => m.ExerciseType, Model.AvailableExerciseTypes, new { onChange = "exerciseTypeSelected(this.value)" })
            @Html.ValidationMessageFor(m => m.ExerciseType)
        </li>
        <li>
            @Html.TextAreaFor(m => m.Description, new { placeholder = "Description" })
            @Html.ValidationMessageFor(m => m.Description)
        </li>
    }
    </ul>
    
    <div id="exerciseTypeValues">
    @if (!String.IsNullOrEmpty(Model.ExerciseType))
    {
        Html.RenderAction("EntryType", new { exerciseTypeId = Model.ExerciseType, exerciseEntryId = Model.Id });
    }
    </div>
    
    @Html.CheckBoxFor(m => m.Favorite, new { Class = "custom" })@Html.LabelFor(m => m.Favorite)
    
    <p>
        @if (Model.Id <= 0)
        {
        <input type="submit" value="Submit" data-theme="b"/>
        <input type="reset" value="Cancel" data-theme="e" onclick="history.back()"/>
        }
        else
        {
        <input type="submit" value="Update" data-theme="b" />
        <input type="button" value="Delete" data-theme="e" onclick="deleteEntry('@Model.Id'); return false" />
        }
    </p>
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.ConsumedDate)
}

